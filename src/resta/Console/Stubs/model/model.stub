<?php

namespace __modelNamespace__;

use __modelNamespace__\Helper\Scope;
use __modelNamespace__\Helper\Event;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model as Eloquent;

/**
 * Class __file__
 * @method static $this pagination()
 * @method static $this active()
 * @method static $this find($id)
 * @method static $this insert($data=array())
 * @method static $this create($data=array())
 * @method static $this where(callable $callback=null)
 * @package App\__project__\__version__\__model__
 */
class __file__ extends Eloquent
{
    use Scope,Event;

    /**
     * @var $table string
     */
    protected $table = '__table__';

    /**
     * @var array $fillable
     */
    protected $fillable = [];

    /**
     * @var array
     */
    protected $hidden = [];

    /**
     * model event boot
     *
     * @return void
     */
    protected static function boot()
    {
        parent::boot();

        static::saved(function($model){
            $this->getTableChanges($model,'updated');
        });

        //query filter scope
        $filter = (!is_null($filter = get('filter'))) ? $filter : [];
        $with = (!is_null($with = get('with'))) ? $with : [];

        static::addGlobalScope('filter', function (Builder $builder) use($filter,$with){

            $builder->with($with);

            if(count($filter)){
                foreach ($filter as $key=>$item){
                    if($key=='order'){
                        $builder->orderBy('id', $item);
                    }
                    else{
                         $builder->where($key,$item);
                    }
                }
            }
            else{
                $builder->orderBy('id','desc');
            }
        });
    }
}

